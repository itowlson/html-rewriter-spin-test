package fermyon:html-rewrite;

interface rewriter {
    record element {
        tag: string,
        attributes: list<tuple<string, string>>,
        can-have-content: bool,
        is-self-closing: bool,
    }
    variant rewrite-action {
        set-tag-name(string),
        set-attribute(tuple<string, string>),
        remove-attribute(string),
        set-inner-content(tuple<string, content-type>),
        prepend-inner-content(tuple<string, content-type>),
        append-inner-content(tuple<string, content-type>),
        remove-element,
        remove-element-keep-content,
        replace-element(tuple<string, content-type>),
        after(tuple<string, content-type>),
        before(tuple<string, content-type>),
    }
    enum content-type {
        html,
        text,
    }

    get-rewriter: func() -> rewriter;

    resource rewriter {
        selectors: func() -> list<string>;
        transform-selector: func(selector: string, element: element) -> list<rewrite-action>;
    }
}

world rewrite-host {
    import rewriter;
}

world rewrite-rules {
    export rewriter;
}
